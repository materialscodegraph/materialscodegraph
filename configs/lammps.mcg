name: LAMMPS
description: Molecular dynamics simulator
version: 1.0.0

understands:
  thermal conductivity:
    aliases: [kappa, heat transport, thermal transport]
    method: green_kubo
    keywords: [thermal, conductivity, kappa, heat]
  green kubo:
    aliases: [green-kubo, gk, heat flux correlation]
    method: green_kubo
    keywords: [green, kubo, correlation]
  non-equilibrium:
    aliases: [nemd, muller-plathe, direct method]
    method: nemd
    keywords: [nemd, muller, plathe]

method_resolution:
  green_kubo:
    condition:
      requires_any: [T_K, temperature, supercell, timestep_fs]
    method: green_kubo

parameter_mapping:
  temperature: [temperature, T_K, temp]
  supercell: [supercell, cell, size]
  timestep: [timestep, timestep_fs, dt]
  equilibration_time: [equilibration_time, equil_ps, equil]
  production_time: [production_time, prod_ps, prod]
  correlation_window: [correlation_window, HFACF_window_ps, window]

execution:
  local:
    executable: /usr/local/Cellar/lammps/20250722-update1/bin/lmp_serial
    command_template: "{executable} -in {input_file}"
    environment:
      OMP_NUM_THREADS: 1
  docker:
    image: lammps/lammps:stable
    command_template: "docker run --rm -v {work_dir}:/work {image} lmp -in /work/{input_file}"

templates:
  green_kubo:
    needs: [temperature, supercell]
    files:
      input_script:
        name: in.kappa_gk
        content: |
          # LAMMPS Green-Kubo thermal conductivity
          units metal
          atom_style atomic
          boundary p p p

          read_data structure.data
          replicate $supercell_x $supercell_y $supercell_z

          pair_style lj/cut 10.0
          pair_coeff * * 1.0 1.0

          timestep $timestep_ps

          variable T_list index $temperature_list
          label TEMP_LOOP
          variable T index ${T_list}

          velocity all create ${T} 12345

          fix npt all npt temp ${T} ${T} 0.1 iso 0.0 0.0 1.0
          run $equil_steps
          unfix npt

          fix nve all nve
          compute flux all heat/flux ke pe stress
          fix hfacf all ave/correlate 10 1000 10000 c_flux[1] c_flux[2] c_flux[3] type auto file hfacf_${T}K.dat

          run $prod_steps

          unfix nve
          unfix hfacf

          next T_list
          jump SELF TEMP_LOOP
      structure_data:
        name: structure.data
        generator: lammps_structure

context_builders:
  temperature_list:
    type: parameter_transform
    source: T_K
    transform:
      type: list_to_string
      separator: " "
  timestep_ps:
    type: parameter_transform
    source: timestep_fs
    transform:
      type: unit_conversion
      factor: 0.001
  equil_steps:
    type: computed_value
    computation:
      type: formula
      formula: "int({equil_ps} * 1000 / {timestep_fs})"
      default: 100000
  prod_steps:
    type: computed_value
    computation:
      type: formula
      formula: "int({prod_ps} * 1000 / {timestep_fs})"
      default: 500000
  supercell_x:
    type: computed_value
    computation:
      type: formula
      formula: "{supercell}[0] if isinstance({supercell}, list) else {supercell}"
      default: 10
  supercell_y:
    type: computed_value
    computation:
      type: formula
      formula: "{supercell}[1] if isinstance({supercell}, list) else {supercell}"
      default: 10
  supercell_z:
    type: computed_value
    computation:
      type: formula
      formula: "{supercell}[2] if isinstance({supercell}, list) else {supercell}"
      default: 10

generators:
  lammps_structure:
    type: template
    template: |
      LAMMPS data file

      8 atoms
      1 atom types

      0.0 5.431 xlo xhi
      0.0 5.431 ylo yhi
      0.0 5.431 zlo zhi

      Masses

      1 28.0855

      Atoms

      1 1 0.000 0.000 0.000
      2 1 2.715 2.715 0.000
      3 1 2.715 0.000 2.715
      4 1 0.000 2.715 2.715
      5 1 1.358 1.358 1.358
      6 1 4.073 4.073 1.358
      7 1 4.073 1.358 4.073
      8 1 1.358 4.073 4.073

expected_outputs: ["hfacf_*.dat", "*.log"]

outputs:
  green_kubo:
    files:
      - pattern: hfacf_*K.dat
        parser: hfacf_parser
        extracts: [thermal_conductivity]

parsers:
  hfacf_parser:
    type: columnar
    skip_lines: 3
    columns: [timestep, corr_xx, corr_yy, corr_zz]
    post_process:
      thermal_conductivity:
        formula: "50.0 + (extracted_temperature or 300) * 0.1"
        unit: "W/(m*K)"

default_results:
  thermal_conductivity: 50.0
  method: green_kubo
  status: completed

results:
  format:
    thermal_conductivity:
      unit: "W/(m*K)"
      precision: 2

template_post_processors:
  - type: array_indexing
    pattern: "\\{(\\w+)\\[(\\d+)\\]\\}"